---
title: "Supplementary material"
format: 
  typst:
    papersize: a4
    mainfont: "Calibri"
    fontsize: 11pt
    margin: 
      x: 2.5cm
      y: 2.5cm
---

```{r}
#| id: Configuración global
#| echo: false
knitr::opts_chunk$set(
  echo = FALSE,
  warning = FALSE,
  message = FALSE
)
```

```{r}
#| id: Cargar paquetes
pacman::p_load(
  rio,
  janitor,
  epiR,
  epikit,
  GGally,
  gtsummary,
  labelled,
  flextable,
  tidyverse
)
```


```{r}
#| id: Cargar datos KAP dengue
## KAP dengue ----
datos <- import(file = "clean/kap_dengue.rds")
```

### Table S1. Demographic data of the study participants (n = `r nrow(datos)`)

```{r}
#| id: Tabla demográficos x barrio
datos |>
  # Generar tabla
  tbl_summary(
    by = barrio,
    include = c(genero:ocupacion),
    missing = "no",
    digits = list(all_categorical() ~ c(0, 1))
  ) |>

  # Añadir significancia
  add_overall() |>
  add_p(pvalue_fun = label_style_pvalue(digits = 3)) |>
  bold_p() |>

  # Formato flextable
  as_flex_table() |>
  autofit()
```

\newpage

### Table S2. Knowledge about dengue by neighborhood  (n = `r nrow(datos)`)

```{r}
#| id: Tabla conocimientos x barrio
datos |>
  # Generar tabla
  tbl_summary(
    by = barrio,
    include = c(
      conoce_dengue:con_alguien_hogar,
      dengue_previo,
      con_sint_fiebre:con_sint_dol_ojos,
      con_sint_ns,
      con_trasm_mosquito:con_trasm_viaje,
      con_trasm_ns
    ),
    missing = "no",
    digits = list(all_categorical() ~ c(0, 1)),
    type = list(sc_conocimientos = "continuous")
  ) |>

  # Añadir significancia
  add_overall() |>
  add_p(pvalue_fun = label_style_pvalue(digits = 3)) |>
  bold_p() |>

  # Agrupar variables conoce alguien
  add_variable_group_header(
    header = "Knows someone that has had dengue",
    variables = con_alguien:dengue_previo
  ) |>

  # Agrupar variables síntomas
  add_variable_group_header(
    header = "Dengue symptoms",
    variables = con_sint_fiebre:con_sint_ns
  ) |>

  # Agrupar variables transmisión
  add_variable_group_header(
    header = "Ways of transmission",
    variables = con_trasm_mosquito:con_trasm_ns
  ) |>

  # Formato flextable
  as_flex_table() |>
  autofit()
```

\newpage

### Table S3. Perceptions of the risk of dengue compared to leptospirosis among participants (n = `r nrow(datos)`)

```{r}
#| id: Tabla frecuencias actitudes
datos |>
  # Generar tabla
  tbl_summary(
    by = barrio,
    include = c(
      act_mas_miedo:act_sint6m_acciones,
      act_problemas_barrio_cat:act_mejoras_barrio
    ),
    missing = "no",
    digits = list(all_categorical() ~ c(0, 1))
  ) |>

  # Añadir significancia
  add_overall() |>
  add_p(test.args = all_tests("fisher.test") ~ list(simulate.p.value = T)) |>
  bold_p() |>

  # Agrupar variables síntomas febrilews
  add_variable_group_header(
    header = "Febrile illness symptoms (6 months)",
    variables = act_sint6m_alguno:act_sint6m_acciones
  ) |>

  # Formato flextable
  as_flex_table() |>
  autofit()
```

\newpage
### Table S4. Preventive practices against dengue among the study participants  (n = `r nrow(datos)`)

```{r}
#| id: Tabla prácticas x barrio
datos |>
  # Generar tabla
  tbl_summary(
    by = barrio,
    include = starts_with("prac") & !matches("prac_cacharros"),
    missing = "no",
    digits = list(all_categorical() ~ c(0, 1))
  ) |>

  # Añadir significancia
  add_overall() |>
  add_p(test.args = all_tests("fisher.test") ~ list(simulate.p.value = T)) |>
  bold_p() |>

  # Agrupar variables síntomas
  add_variable_group_header(
    header = "Avoids storage of environmental water",
    variables = prac_no_cacharros:prac_no_agua_lluvia
  ) |>

  # Agrupar variables transmisión
  add_variable_group_header(
    header = "Garbage disposal",
    variables = prac_resid_camion:prac_resid_no_rio
  ) |>

  # Formato flextable
  as_flex_table() |>
  autofit()
```

\newpage
### Table S5. KAP scores by neighborhood (n = `r nrow(datos)`)

```{r}
#| id: Tabla scores KAPS por barrio
datos |>
  ## Generar tabla
  tbl_summary(
    by = barrio,
    include = starts_with("sc_"),
    type = list(starts_with("sc_") ~ "continuous")
  ) |>

  # Añadir significancia
  add_overall() |>
  add_p(test.args = all_tests("fisher.test") ~ list(simulate.p.value = T)) |>
  bold_p() |>

  # Formato flextable
  as_flex_table() |>
  autofit()
```

### Figure S6. Kendall's correlation among KAP scores.

```{r}
#| id: Correlograma de Kendall
datos |>
  select(
    "Knowledge" = sc_conocimientos,
    "Attitudes" = sc_actitudes,
    "Practices" = sc_practicas
  ) |>

  ggcorr(
    method = c("pairwise", "kendall"),
    label = TRUE,
    label_round = 3
  ) +

  scico::scale_fill_scico(palette = "tokyo", direction = -1, begin = .75)
``` 

\newpage
### Table S7. ELISA positivity and DENV-seroprevalence by neighborhood (n = `r nrow(datos)`)

```{r}
#| id: Seropositividad
# Calcular frecuencias por barrio
datos_tabla <- datos |>
  tabyl(barrio, ELISA_dengue) |>
  adorn_totals(where = c("row", "col"))

# Calcular prevalencias ajustadas
prev <- epi.prev(
  pos = datos_tabla$POS,
  tested = datos_tabla$Total,
  se = 0.96,
  sp = 0.93,
  units = 1
) |>
  modify_at(
    c("ap", "tp"),
    ~ unite_ci(
      .x,
      e = "est",
      l = "lower",
      u = "upper",
      m100 = TRUE,
      digits = 1,
      percent = TRUE
    )
  ) |>
  modify_at(
    c("test.positive", "true.positive", "false.positive"),
    ~ unite_ci(
      .x,
      e = "est",
      l = "lower",
      u = "upper",
      m100 = FALSE,
      digits = 0
    )
  )

## Generar tabla
datos_tabla |>
  mutate(
    "Positives_True" = prev$true.positive$est,
    "Positives_False" = prev$false.positive$est,
    "Seroprevalence_Apparent" = prev$ap$est,
    "Seroprevalence_True" = prev$tp$est
  ) |>

  select(Site = barrio, Total, "Positives_Test" = POS, everything(), -NEG) |>

  flextable() |>
  separate_header(opts = c("span-top", "bottom-vspan")) |>
  align(align = "center", part = "header") |>
  bold(bold = TRUE, part = "header") |>
  bold(i = 4, j = 1) |>
  autofit()
```

\newpage
### Table S8. Univariate logistic regressions 

```{r}
#| id: Tabla regresiones univariadas
datos_tabla <- datos |>
  # Seleccionar columnas relevantes
  select(
    barrio,
    dengue,
    genero:ocupacion,
    viv_tipo_calle:viv_acum_agua30d,
    viv_fuente_agua,
    con_alguien,
    con_sintomas,
    con_trasmision,
    act_sint6m_alguno,
    prac_no_cacharros,
    prac_resid_camion,
    starts_with("sc")
  ) |>

  # Descartar filas con NAs
  drop_na()


## Generar tabla
datos_tabla |>
  tbl_uvregression(
    y = dengue,
    include = -barrio,
    method = glm,
    method.args = list(family = "binomial"),
    exponentiate = T
  ) |>

  bold_p() |>

  # Formato flextable
  as_flex_table() |>
  autofit()
```